{"version":3,"sources":["components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","pages/Home.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonComponent.tsx","pages/PeoplePage/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.routing.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","end","Navbar","role","App","Home","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","sex","slug","name","PersonComponent","born","died","motherName","fatherName","mother","father","activeSlug","useParams","PeopleTable","people","map","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","handleGetPeople","data","dataWithParents","find","anyone","useEffect","length","AppRouting","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9e65cf2c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nconst PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n      end={to === '/'}\n    >\n      {text}\n    </NavLink>\n  );\n};\n\nexport default PageNavLink;\n","import React from 'react';\nimport PageNavLink from './PageNavLink';\n\nconst Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import './App.scss';\nimport {\n  Outlet,\n} from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const Home = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nconst PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n      to={`/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n\nexport default PersonLink;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport PersonLink from './PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nconst PersonComponent: React.FC<Props> = ({ person }) => {\n  const {\n    sex, born, died, motherName, fatherName, mother, father,\n  } = person;\n\n  const { slug: activeSlug } = useParams();\n\n  return (\n    <tr\n      className={person.slug === activeSlug ? 'has-background-warning' : ''}\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n\n    </tr>\n  );\n};\n\nexport default PersonComponent;\n","import React from 'react';\nimport PersonComponent from '../../components/PersonComponent';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[];\n}\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonComponent person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport PeopleTable from './PeopleTable';\n\nconst PeoplePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const handleGetPeople = async () => {\n    try {\n      setIsLoading(true);\n      const data = await getPeople();\n\n      const dataWithParents = data.map(person => {\n        return {\n          ...person,\n          mother: data.find(anyone => anyone.name === person.motherName),\n          father: data.find(anyone => anyone.name === person.fatherName),\n        };\n      });\n\n      setPeople(dataWithParents);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    handleGetPeople();\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return (\n      <div className=\"block\">\n        <h1 className=\"title\">People Page</h1>\n\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {people.length === 0 ? (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        ) : (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { Home } from './pages/Home';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport PeoplePage from './pages/PeoplePage/PeoplePage';\n\nconst AppRouting: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Home />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default AppRouting;\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport AppRouting from './App.routing';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <AppRouting />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}